CREATE SCHEMA public
	CREATE TABLE public.actor(
		actor_id integer NOT NULL DEFAULT nextval('actor_actor_id_seq'::regclass),
		first_name character varying(45) NOT NULL,
		last_name character varying(45) NOT NULL,
		last_update timestamp without time zone NOT NULL DEFAULT now(),
		CONSTRAINT actor_pkey PRIMARY KEY (actor_id)
	)

	CREATE TABLE public.store(
		store_id integer NOT NULL DEFAULT nextval('store_store_id_seq'::regclass),
		manager_staff_id smallint NOT NULL,
		address_id smallint NOT NULL,
		last_update timestamp without time zone NOT NULL DEFAULT now(),
		CONSTRAINT store_pkey PRIMARY KEY (store_id),
		CONSTRAINT store_address_id_fkey FOREIGN KEY (address_id)
			REFERENCES public.address (address_id) MATCH SIMPLE
			ON UPDATE CASCADE
			ON DELETE RESTRICT,
		CONSTRAINT store_manager_staff_id_fkey FOREIGN KEY (manager_staff_id)
			REFERENCES public.staff (staff_id) MATCH SIMPLE
			ON UPDATE CASCADE
			ON DELETE RESTRICT
	)

	CREATE TABLE public.address(
		address_id integer NOT NULL DEFAULT nextval('address_address_id_seq'::regclass),
		address character varying(50) NOT NULL,
		address2 character varying(50),
		district character varying(20) NOT NULL,
		city_id smallint NOT NULL,
		postal_code character varying(10),
		phone character varying(20) NOT NULL,
		last_update timestamp without time zone NOT NULL DEFAULT now(),
		CONSTRAINT address_pkey PRIMARY KEY (address_id),
		CONSTRAINT fk_address_city FOREIGN KEY (city_id)
			REFERENCES public.city (city_id) MATCH SIMPLE
			ON UPDATE NO ACTION
			ON DELETE NO ACTION
	)

	CREATE TABLE public.category(
		category_id integer NOT NULL DEFAULT nextval('category_category_id_seq'::regclass),
		name character varying(25) NOT NULL,
		last_update timestamp without time zone NOT NULL DEFAULT now(),
		CONSTRAINT category_pkey PRIMARY KEY (category_id)
	)

	CREATE TABLE public.city(
		city_id integer NOT NULL DEFAULT nextval('city_city_id_seq'::regclass),
		city character varying(50) NOT NULL,
		country_id smallint NOT NULL,
		last_update timestamp without time zone NOT NULL DEFAULT now(),
		CONSTRAINT city_pkey PRIMARY KEY (city_id),
		CONSTRAINT fk_city FOREIGN KEY (country_id)
			REFERENCES public.country (country_id) MATCH SIMPLE
			ON UPDATE NO ACTION
			ON DELETE NO ACTION
	)

	CREATE TABLE public.country(
		country_id integer NOT NULL DEFAULT nextval('country_country_id_seq'::regclass),
		country character varying(50) NOT NULL,
		last_update timestamp without time zone NOT NULL DEFAULT now(),
		CONSTRAINT country_pkey PRIMARY KEY (country_id)
	)

	CREATE TABLE public.customer(
		customer_id integer NOT NULL DEFAULT nextval('customer_customer_id_seq'::regclass),
		store_id smallint NOT NULL,
		first_name character varying(45) NOT NULL,
		last_name character varying(45) NOT NULL,
		email character varying(50),
		address_id smallint NOT NULL,
		activebool boolean NOT NULL DEFAULT true,
		create_date date NOT NULL DEFAULT ('now'::text)::date,
		last_update timestamp without time zone DEFAULT now(),
		active integer,
		CONSTRAINT customer_pkey PRIMARY KEY (customer_id),
		CONSTRAINT customer_address_id_fkey FOREIGN KEY (address_id)
			REFERENCES public.address (address_id) MATCH SIMPLE
			ON UPDATE CASCADE
			ON DELETE RESTRICT
	)

	CREATE TABLE public.film_actor(
		actor_id smallint NOT NULL,
		film_id smallint NOT NULL,
		last_update timestamp without time zone NOT NULL DEFAULT now(),
		CONSTRAINT film_actor_pkey PRIMARY KEY (actor_id),
		CONSTRAINT film_actor_pkey PRIMARY KEY (film_id),
		CONSTRAINT film_actor_actor_id_fkey FOREIGN KEY (actor_id)
			REFERENCES public.actor (actor_id) MATCH SIMPLE
			ON UPDATE CASCADE
			ON DELETE RESTRICT,
		CONSTRAINT film_actor_film_id_fkey FOREIGN KEY (film_id)
			REFERENCES public.film (film_id) MATCH SIMPLE
			ON UPDATE CASCADE
			ON DELETE RESTRICT
	)

	CREATE TABLE public.film_category(
		film_id smallint NOT NULL,
		category_id smallint NOT NULL,
		last_update timestamp without time zone NOT NULL DEFAULT now(),
		CONSTRAINT film_category_pkey PRIMARY KEY (film_id),
		CONSTRAINT film_category_pkey PRIMARY KEY (category_id),
		CONSTRAINT film_category_category_id_fkey FOREIGN KEY (category_id)
			REFERENCES public.category (category_id) MATCH SIMPLE
			ON UPDATE CASCADE
			ON DELETE RESTRICT,
		CONSTRAINT film_category_film_id_fkey FOREIGN KEY (film_id)
			REFERENCES public.film (film_id) MATCH SIMPLE
			ON UPDATE CASCADE
			ON DELETE RESTRICT
	)

	CREATE TABLE public.inventory(
		inventory_id integer NOT NULL DEFAULT nextval('inventory_inventory_id_seq'::regclass),
		film_id smallint NOT NULL,
		store_id smallint NOT NULL,
		last_update timestamp without time zone NOT NULL DEFAULT now(),
		CONSTRAINT inventory_pkey PRIMARY KEY (inventory_id),
		CONSTRAINT inventory_film_id_fkey FOREIGN KEY (film_id)
			REFERENCES public.film (film_id) MATCH SIMPLE
			ON UPDATE CASCADE
			ON DELETE RESTRICT
	)

	CREATE TABLE public.language(
		language_id integer NOT NULL DEFAULT nextval('language_language_id_seq'::regclass),
		name character(20) NOT NULL,
		last_update timestamp without time zone NOT NULL DEFAULT now(),
		CONSTRAINT language_pkey PRIMARY KEY (language_id)
	)

	CREATE TABLE public.rental(
		rental_id integer NOT NULL DEFAULT nextval('rental_rental_id_seq'::regclass),
		rental_date timestamp without time zone NOT NULL,
		inventory_id integer NOT NULL,
		customer_id smallint NOT NULL,
		return_date timestamp without time zone,
		staff_id smallint NOT NULL,
		last_update timestamp without time zone NOT NULL DEFAULT now(),
		CONSTRAINT rental_pkey PRIMARY KEY (rental_id),
		CONSTRAINT rental_customer_id_fkey FOREIGN KEY (customer_id)
			REFERENCES public.customer (customer_id) MATCH SIMPLE
			ON UPDATE CASCADE
			ON DELETE RESTRICT,
		CONSTRAINT rental_inventory_id_fkey FOREIGN KEY (inventory_id)
			REFERENCES public.inventory (inventory_id) MATCH SIMPLE
			ON UPDATE CASCADE
			ON DELETE RESTRICT,
		CONSTRAINT rental_staff_id_key FOREIGN KEY (staff_id)
			REFERENCES public.staff (staff_id) MATCH SIMPLE
			ON UPDATE NO ACTION
			ON DELETE NO ACTION
	)

	CREATE TABLE public.staff(
		staff_id integer NOT NULL DEFAULT nextval('staff_staff_id_seq'::regclass),
		first_name character varying(45) NOT NULL,
		last_name character varying(45) NOT NULL,
		address_id smallint NOT NULL,
		email character varying(50),
		store_id smallint NOT NULL,
		active boolean NOT NULL DEFAULT true,
		username character varying(16) NOT NULL,
		password character varying(40),
		last_update timestamp without time zone NOT NULL DEFAULT now(),
		picture bytea,
		CONSTRAINT staff_pkey PRIMARY KEY (staff_id),
		CONSTRAINT staff_address_id_fkey FOREIGN KEY (address_id)
			REFERENCES public.address (address_id) MATCH SIMPLE
			ON UPDATE CASCADE
			ON DELETE RESTRICT
	)

	CREATE TABLE public.payment(
		payment_id integer NOT NULL DEFAULT nextval('payment_payment_id_seq'::regclass),
		customer_id smallint NOT NULL,
		staff_id smallint NOT NULL,
		rental_id integer NOT NULL,
		amount numeric NOT NULL,
		payment_date timestamp without time zone NOT NULL,
		CONSTRAINT payment_pkey PRIMARY KEY (payment_id),
		CONSTRAINT payment_customer_id_fkey FOREIGN KEY (customer_id)
			REFERENCES public.customer (customer_id) MATCH SIMPLE
			ON UPDATE CASCADE
			ON DELETE RESTRICT,
		CONSTRAINT payment_rental_id_fkey FOREIGN KEY (rental_id)
			REFERENCES public.rental (rental_id) MATCH SIMPLE
			ON UPDATE CASCADE
			ON DELETE SET NULL,
		CONSTRAINT payment_staff_id_fkey FOREIGN KEY (staff_id)
			REFERENCES public.staff (staff_id) MATCH SIMPLE
			ON UPDATE CASCADE
			ON DELETE RESTRICT
	)

	CREATE TABLE public.film(
		film_id integer NOT NULL DEFAULT nextval('film_film_id_seq'::regclass),
		title character varying(255) NOT NULL,
		description text,
		release_year integer,
		language_id smallint NOT NULL,
		rental_duration smallint NOT NULL DEFAULT 3,
		rental_rate numeric NOT NULL DEFAULT 4.99,
		length smallint,
		replacement_cost numeric NOT NULL DEFAULT 19.99,
		rating USER-DEFINED DEFAULT 'G'::mpaa_rating,
		last_update timestamp without time zone NOT NULL DEFAULT now(),
		special_features ARRAY,
		fulltext tsvector NOT NULL,
		CONSTRAINT film_pkey PRIMARY KEY (film_id),
		CONSTRAINT film_language_id_fkey FOREIGN KEY (language_id)
			REFERENCES public.language (language_id) MATCH SIMPLE
			ON UPDATE CASCADE
			ON DELETE RESTRICT
	)

